<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed = 0
yspeed = 0
carrying = false
facing_right = true
platform_solid = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Control input
control_right = keyboard_check(vk_right) or keyboard_check(ord('D'));
control_left = keyboard_check(vk_left) or keyboard_check(ord('A'));
control_jump = keyboard_check_pressed(vk_up) or keyboard_check_pressed(ord('W'))
control_jump_release = keyboard_check_released(vk_up) or keyboard_check_released(ord('W'))
control_restart = keyboard_check_pressed(ord('R'))

//Restart button
if control_restart = true
    room_restart();

//Movement variables
xspeed+=1*(control_right-control_left);
if xspeed &lt; -5
    xspeed = max(-5,xspeed);
if xspeed &gt; 5
    xspeed = min(5,xspeed);
    
var collision
collision = instance_place(x,y+1,obj_solid)
if collision != noone {
    if collision.solid = true and control_jump = true
        yspeed=-15;
    }

if control_jump_release = true and yspeed &lt; 0
    yspeed = floor(yspeed/2);
    
//Determine facing
if xspeed &gt; 0
    facing_right = true;
if xspeed &lt; 0
    facing_right = false;

//Horizontal friction
if xspeed &gt; 0 and control_right = false
    xspeed-=1;
if xspeed &lt; 0 and control_left = false
    xspeed+=1;

//Gravity
yspeed += 1;
if yspeed &gt; 8
    yspeed = 8;

//Horizontal movement and wall collision
for (i = xspeed; i !=0; i -= 1*sign(i)) {
    var collision
    collision = instance_place(x+i,y,obj_solid)
    if collision != noone
        if collision.solid = true or x+i-sprite_xoffset &lt; 0 or x+i+sprite_xoffset &gt; room_width
            xspeed-=1*sign(i);
}

x+=xspeed;

//Vertical movement and wall collision
for (i = yspeed; i !=0; i -= 1*sign(i)) {
    var collision
    collision = instance_place(x,y+i,obj_solid)
    if collision != noone
        if collision.solid = true
            yspeed-=1*sign(i);
}          
y+=yspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(level_two)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(level_one)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
