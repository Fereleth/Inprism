<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>in_colour = false
yspeed = 0
carried = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Colour changing (placeholder)
if colour = c_red and x &lt; room_width/3
    in_colour = true;
else if colour = c_green and x &lt; room_width/3*2 and x &gt; room_width/3
    in_colour = true;
else if colour = c_blue and x &gt; room_width/3*2
    in_colour = true;
else
    in_colour = false;
//Picking up/carrying and dropping
control_grab = keyboard_check_pressed(ord('X'));
if control_grab = true and obj_player.carrying = self {
    var placement
    if obj_player.facing_right = true
        placement = x+sprite_width+obj_player.xspeed
    else
        placement = x-sprite_width+obj_player.xspeed
    if place_meeting(placement,y,obj_solid) = false {
        carried = false
        obj_player.carrying = false
        x=placement
        }
    }
if control_grab = true and (place_meeting(x-1,y,obj_player) or place_meeting(x+1,y,obj_player)) and carried = false and obj_player.carrying = false
    obj_player.carrying = self
//Movement    
if obj_player.carrying = self {
    x = obj_player.x;
    y = obj_player.y-obj_player.sprite_yoffset;
    yspeed = 0
    }
else {
    //Gravity
    yspeed += 1;
    if yspeed &gt; 8
    yspeed = 8;
    //Collision
    for (i = yspeed; i !=0; i -= 1*sign(i))
        if place_meeting(x,y+i,obj_solid)
            yspeed-=1*sign(i);
    y+=yspeed;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if in_colour = true
    draw_set_color(colour)
else
    draw_set_colour(c_black)
draw_rectangle(x-sprite_xoffset,y-sprite_yoffset,x+sprite_xoffset-1,y,false)
draw_set_color(c_white)
draw_rectangle(x-sprite_xoffset,y-sprite_yoffset,x+sprite_xoffset-1,y,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
